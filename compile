#!/bin/bash

function showAvailableNginxVersion() {
	echo "check available nginx versions:"
	web=`curl -s https://nginx.org/en/download.html`
	echo "$web"|grep -o "nginx-[0-9]\+.[0-9]\+.[0-9]\+.tar.gz\"" > /tmp/nginx.version
	#echo "$web"|grep -e 'nginx' > nginx.version
	cat /tmp/nginx.version | grep -o "nginx-[0-9]\+.[0-9]\+.[0-9]\+"
	rm -rf /tmp/nginx.version
}

function getLatestNginxVersion() {
	web=`curl -s https://nginx.org/en/download.html`
	echo "$web"|grep -o "nginx-[0-9]\+.[0-9]\+.[0-9]\+.tar.gz\"" | head -1 | grep -o "nginx-[0-9]\+.[0-9]\+.[0-9]\+"
}

function printUsage() {
	echo "Usage: $0 <version>"
	echo "  e.g: $0 1.16.1"
	echo "       $0 latest"
	echo ""
	showAvailableNginxVersion
	echo ""
}

NGINXV="nginx-$1"

if [ ! "$1" ]; then
	printUsage
	exit 1
elif [ "$1" == "latest" ]; then
	NGINXV=$(getLatestNginxVersion)
fi

BASEDIR=$(cd "$(dirname "$0")"; pwd)
TMPDIR="$BASEDIR/tmp"
TARGETDIR="$BASEDIR/build/"

#[[ "$1" == "--latest" ]] && NGINXV=nginx-1.16.1 || NGINXV=nginx-1.16.1
echo "nginx version "$NGINXV" selected"

mkdir -p $TMPDIR
rm -rf $TARGETDIR & mkdir -p $TARGETDIR

# Create and move into the tmp dirctory
cd $TMPDIR

# Download nginx source
URL="https://nginx.org/download/$NGINXV.tar.gz"
if [ ! -f $NGINXV.tar.gz ]; then
	echo "Downloading nginx."
	echo "$URL"
	if hash curl 2>/dev/null; then
		#(curl "$URL" --silent -o $NGINXV.tar.gz) > /dev/null
		curl "$URL" --silent -o $NGINXV.tar.gz
	else
		echo "curl not found, falling back to wget."
		#(wget "$URL" --quiet -O $NGINXV.tar.gz) > /dev/null
		wget "$URL" --quiet -O $NGINXV.tar.gz
	fi
else
	echo "nginx already downloaded."
fi

# Unpack nginx source
echo "Extracting file."
tar zxf ./$NGINXV.tar.gz

# Configure and make
echo "Configuring executable."

cd ./$NGINXV
./configure --prefix=. --sbin-path=sbin/ --conf-path=conf/nginx.conf --error-log-path=logs/error.log --http-client-body-temp-path=tmp/client_body_temp/ --http-proxy-temp-path=tmp/proxy_temp/ --http-fastcgi-temp-path=tmp/fastcgi_temp/ --http-uwsgi-temp-path=tmp/uwsgi_temp/ --http-scgi-temp-path=tmp/scgi_temp/ --with-ipv6 --with-http_ssl_module --with-http_gzip_static_module --with-http_stub_status_module --with-http_v2_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --without-http_fastcgi_module > ../../logs/compile.log

echo "Building executable."
make >> ../../logs/compile.log

# Move bin file into appropriate dir
mkdir -p $TARGETDIR/$NGINXV
mkdir -p $TARGETDIR/$NGINXV/logs
mkdir -p $TARGETDIR/$NGINXV/tmp
mkdir -p $TARGETDIR/$NGINXV/sbin

cp -f objs/nginx $TARGETDIR/$NGINXV/sbin/
cp -r conf $TARGETDIR/$NGINXV/
cp -r html $TARGETDIR/$NGINXV/

cd $TARGETDIR
tar czf "$NGINXV".tar.gz $NGINXV
rm -rf $NGINXV

# Remove the temporary directory
echo "Cleaning up."
cd $BASEDIR
#rm -r $TMPDIR/$NGINXV && rm -r $TMPDIR/$NGINXV.tar.gz
rm -r $TMPDIR/$NGINXV


